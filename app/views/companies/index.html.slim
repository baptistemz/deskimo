= content_for(:title) do
  Bureaux à louer maintenant autour de vous.

= content_for(:meta_description) do
  Reservez parmi tous les bureaux d'espaces de coworking et d'entreprises autour de vous.
#desktop-map.hidden-xs
#mobile-map.visible-xs.out-window
.container-fluid#main
  .row
    .col-xs-12.col-sm-7#left
      .row.research-bar
        .col-xs-9.col-sm-12
          = form_tag companies_path, method: :get, class: "flexform"
            .row
              .col-xs-7
                = text_field_tag :full_address, params[:full_address], placeholder: t('home.city_placeholder'), id: "js-autocomplete-city", class: "pretty-field"
                button.search-btn type="submit"
                  i.fa.fa-search
                / = hidden_field_tag :geoloc, cookies[:lat_lng], disabled: true
                = hidden_field_tag :lat, params[:lat], id: "lat"
                = hidden_field_tag :lng, params[:lng], id: "lng"
                / = hidden_field_tag :lng, id: 'lng', disabled: true
                  / = hidden_field_tag :street_number, id: "street_number", disabled: true
                  / = hidden_field_tag :route, id: "route", disabled: true
                  / = hidden_field_tag :locality, id: "locality", disabled: true
                  / = hidden_field_tag :country, id: "country", disabled: true

              .col-xs-5
                #filter-select
                  / = form_tag companies_path, method: :get, class: "flexform"
                  = select_tag :kind, options_for_select(Desk.kind.options(only: @kinds), params[:kind]), label: false, prompt: t('index.kind_of_desk'), include_blank: false, :onchange => "this.form.submit()"
                  / = select_tag :kind, collection: @kinds, selected: @kinds, label: false, prompt: 'kind', include_blank: true, input_html: {:onchange => "this.form.submit()"}

        .col-xs-3.visible-xs.no-padding-left
          .map-btn
            = image_tag 'map-icon.png', id: 'map-icon'
            .i.fa.fa-list#list-icon.hidden

      .row.products-list
        - if @empty_message
          p = @empty_message
        -else
          - @companies.each do |company|
            .col-xs-12.col-md-6
              =link_to company_desks_path(company)
                .product-thumbnail
                  .product-thumbnail-gradient
                    h4 Détails
                  = image_tag company.picture.url(:list), class: "img-responsive"
                  .distance
                    p #{number_with_precision(company.distance_from(@location), precision: 1)} km
                  ul.list-unstyle.list-inline#services
                    - if company.wifi?
                      li
                        .service-badge
                          i.fa.fa-wifi
                    - if company.coffee?
                      li
                        .service-badge
                          i.fa.fa-coffee
                    - if company.printer?
                      li
                        .service-badge
                          i.fa.fa-print
                  .product-thumbnail-content
                    .product-name
                      p = company.name
                    .product-price
                      p #{company.cheapest_desk.daily_price}€ / j

    .col-sm-5.hidden-xs.fixed
      / .map-outer.hidden-xs
    / #list-btn.hidden
    /   .i.fa.fa-list




  - content_for (:after_js)


    javascript:
      $(function(){
        var mapStyle = [{"featureType":"administrative","elementType":"labels.text.fill","stylers":[{"color":"#781611"}]},{"featureType":"landscape","elementType":"all","stylers":[{"color":"#f2f2f2"}]},{"featureType":"landscape.man_made","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"color":"#dfdfdf"}]},{"featureType":"poi","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"road","elementType":"all","stylers":[{"saturation":-100},{"lightness":45}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"gamma":"0.86"},{"visibility":"on"},{"color":"#e2b119"}]},{"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"transit.station.rail","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"hue":"#ff7100"}]},{"featureType":"water","elementType":"geometry","stylers":[{"visibility":"on"},{"color":"#4980c1"}]}];
        handler = Gmaps.build('Google');
        handler.buildMap({
          internal: { id: 'desktop-map' },
          provider: {
            styles: mapStyle,
            scrollwheel: false
          }
        }, function(){
          markers1 = handler.addMarkers(#{raw @hash.to_json});
          markers2 = handler.addMarkers(#{raw @mypos.to_json});
          handler.bounds.extendWith(markers1);
          handler.fitMapToBounds();
        });

        mobile_handler = Gmaps.build('Google');
        mobile_handler.buildMap({
          internal: { id: 'mobile-map' },
          provider: {
            styles: mapStyle,
            scrollwheel: true
          }
        }, function(){
          markers1 = mobile_handler.addMarkers(#{raw @hash.to_json});
          markers2 = mobile_handler.addMarkers(#{raw @mypos.to_json});
          mobile_handler.bounds.extendWith(markers1);
          mobile_handler.fitMapToBounds();
        });
      })

